version: 0.2

env:
  variables:
    AWS_REGION_NAME: ap-northeast-1
    REPOSITORY_NAME: laravel-nginx-mysql
    ECR_REPOSITORY_NAME: laravel_nginx_mysql

phases:
  install:
    runtime-versions:
      docker: 20
  pre_build: # commands to be run before build
    commands:
      - echo Logging in to Amazon ECR....
      - aws --version
      - $(aws ecr get-login --no-include-email --region ${AWS_REGION_NAME})
      - AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query 'Account' --output text)
      - ECR_URL=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION_NAME}.amazonaws.com
      - REPOSITORY_URI_APP=${ECR_URL}/${ECR_REPOSITORY_NAME}_app
      - REPOSITORY_URI_WEB=${ECR_URL}/${ECR_REPOSITORY_NAME}_web

  build:
    commands:
      - echo Building the Docker image...
      - docker-compose -f docker-compose.prod.yml build
      - echo ${REPOSITORY_NAME}_app:latest ${REPOSITORY_URI_APP}:latest
      - docker tag ${REPOSITORY_NAME}_app:latest ${REPOSITORY_URI_APP}:latest
      - echo ${REPOSITORY_NAME}_web:latest ${REPOSITORY_URI_WEB}:latest
      - docker tag ${REPOSITORY_NAME}_web:latest ${REPOSITORY_URI_WEB}:latest
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker image ls -a
      - docker push ${REPOSITORY_URI_APP}:latest
      - docker push ${REPOSITORY_URI_WEB}:latest
      - echo "[{\"name\":\"app\",\"imageUri\":\"${REPOSITORY_URI_APP}:latest\"},{\"name\":\"web\",\"imageUri\":\"${REPOSITORY_URI_WEB}:latest\"}]" > imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
